ggsurvplot(forKM_age_rate, data = subset(data1,group=="de"),risk.table = TRUE,pval = TRUE,conf.int = F,xlab='Follow Up',legend = "bottom",legend.title = "risk",legend.labs = c("age>55 years old","age<55 years old"))
forKM_age_rate<-survfit(Surv(survival.time,result)~ age.group, data = subset(data1,group=="ex"))
ggsurvplot(forKM_age_rate, data = subset(data1,group=="ex"),risk.table = TRUE,pval = TRUE,conf.int = F,xlab='Follow Up',legend = "bottom",legend.title = "risk",legend.labs = c("age>55 years old","age<55 years old"))
forKM_age_rate<-survfit(Surv(survival.time,result)~ age.group, data = subset(data1,group=="in"))
ggsurvplot(forKM_age_rate, data = subset(data1,group=="in"),risk.table = TRUE,pval = TRUE,conf.int = F,xlab='Follow Up',legend = "bottom",legend.title = "risk",legend.labs = c("age>55 years old","age<55 years old"))
risk.group<-ifelse(data1$radscore>1,'high','low')
risk.group<-ifelse(data1$radscore>1,'high','low')
forKM_radscore_rate<-survfit(Surv(survival.time,result)~ risk.group, data =subset(data1,group=="de"))
risk.group<-ifelse(data1$radscore>1,'high','low')
data1<-cbind(data1,age.group,risk.group)
train<-subset(data1,train==1)
test<-subset(data1,train==0)
external<-subset(data1,train==2)
internal<-subset(data1,train==3)
forKM_radscore_rate<-survfit(Surv(survival.time,result)~ risk.group, data =subset(data1,group=="de"))
ggsurvplot(forKM_radscore_rate, data = subset(data1,group=="de"), risk.table = TRUE,pval=T,pval.method=F,conf.int = F,xlab='Follow Up',legend = "bottom",legend.title = "risk",legend.labs = c("Rad score high risk","Rad score low risk"))
forKM_radscore_rate<-survfit(Surv(survival.time,result)~ risk.group, data =subset(data1,group=="ex"))
ggsurvplot(forKM_radscore_rate, data = subset(data1,group=="ex"), risk.table = TRUE,pval=T,pval.method=F,conf.int = F,xlab='Follow Up',legend = "bottom",legend.title = "risk",legend.labs = c("Rad score high risk","Rad score low risk"))
forKM_radscore_rate<-survfit(Surv(survival.time,result)~ risk.group, data =subset(data1,group=="in"))
ggsurvplot(forKM_radscore_rate, data = subset(data1,group=="in"), risk.table = TRUE,pval=T,pval.method=F,conf.int = F,xlab='Follow Up',legend = "bottom",legend.title = "risk",legend.labs = c("Rad score high risk","Rad score low risk"))
forKM_radscore_rate<-survfit(Surv(survival.time,result)~ risk.group, data =subset(data1,group=="de"))
ggsurvplot(forKM_radscore_rate, data = subset(data1,group=="de"), risk.table = TRUE,pval=T,pval.method=F,conf.int = T,xlab='Follow Up',legend = "bottom",legend.title = "risk",legend.labs = c("Rad score high risk","Rad score low risk"))
forKM_radscore_rate<-survfit(Surv(survival.time,result)~ risk.group, data =subset(data1,group=="ex"))
ggsurvplot(forKM_radscore_rate, data = subset(data1,group=="ex"), risk.table = TRUE,pval=T,pval.method=F,conf.int = T,xlab='Follow Up',legend = "bottom",legend.title = "risk",legend.labs = c("Rad score high risk","Rad score low risk"))
forKM_radscore_rate<-survfit(Surv(survival.time,result)~ risk.group, data =subset(data1,group=="in"))
ggsurvplot(forKM_radscore_rate, data = subset(data1,group=="in"), risk.table = TRUE,pval=T,pval.method=F,conf.int = T,xlab='Follow Up',legend = "bottom",legend.title = "risk",legend.labs = c("Rad score high risk","Rad score low risk"))
data2<-na.omit(data1)
---
data2$CRfail = c(1- (summary(survfit(CRmodel, newdata=data2), times=24)$surv))
data2$Rfail= c(1- (summary(survfit(Rmodel, newdata=data2), times=24)$surv))
---
data2$CRfail = c(1- (summary(survfit(CRmodel, newdata=data2), times=24)$surv))
setwd("D:/renji/ILD")
library(survival)
library(glmnet)
library(openxlsx)
data1<-read.xlsx("clinicaltable.xlsx",sheet=1)
for (i in c(2:4,8,14:28,30,36,37,41,44,48,53,57:61)){
data1[,i] <- as.factor(data1[,i])
}
for (i in c(5:7,9:13,29,31:35,38:40,42,43,45:47,49:52,54,56)){
data1[,i] <- as.numeric(as.character(data1[,i]))
}
age.group<-ifelse(data1$age>55,'high','low')
data1<-cbind(data1,age.group)
data1$result<-as.numeric(as.character(data1$result))
train<-subset(data1,train==1)
y_train<- Surv(train$survival.time,train$result)
source("stdca.R")
library(survival)
CRmodel<- coxph(Surv(survival.time,result,type = "right")~radscore+age.group+FVC.rate, data=train)
Rmodel<- coxph(Surv(survival.time,result,type = "right")~radscore, data=train)
Vmodel<- coxph(Surv(survival.time,result,type = "right")~HRCTscore, data=train)
data2<-na.omit(data1)
---
data2$CRfail = c(1- (summary(survfit(CRmodel, newdata=data2), times=24)$surv))
##
data2$CRfail = c(1- (summary(survfit(CRmodel, newdata=data2), times=24)$surv))
data2$Rfail= c(1- (summary(survfit(Rmodel, newdata=data2), times=24)$surv))
data2$Vfail= c(1- (summary(survfit(Vmodel, newdata=data2), times=24)$surv))
CR=stdca(data=data2, outcome="result", ttoutcome="survival.time", predictors= c("CRfail"),timepoint=24,smooth=TRUE)
CR=stdca(data=data2, outcome="result", ttoutcome="survival.time", predictors= c("CRfail"),timepoint=5,smooth=TRUE)
CR=stdca(data=data2, outcome="result", ttoutcome="survival.time", predictors= c("CRfail"),timepoint=4,smooth=TRUE)
##
library(ggDCA)
library(rms)
CRmodel<- cph(Surv(survival.time,result)~radscore+age.group+FVC.rate, data=train)
Rmodel<- cph(Surv(survival.time,result)~radscore, data=train)
visualmodel<- cph(Surv(survival.time,result)~HRCTscore, data=train)
#on new dataset
d_all<-dca(CRmodel,Rmodel,visualmodel,times=24,new.data=data2)
ggplot(d_all)
CRmodel<- coxph(Surv(survival.time,result)~radscore+age.group+FVC.rate, data=train)
data2<-na.omit(data1)
##
data2$CRfail = c(1- (summary(survfit(CRmodel, newdata=data2), times=24)$surv))
CR=stdca(data=data2, outcome="result", ttoutcome="survival.time", predictors= c("CRfail"),timepoint=4,smooth=TRUE)
setwd("D:/renji/ILD")
library(survival)
library(glmnet)
library(openxlsx)
#table1
data1<-read.xlsx("clinicaltable.xlsx",sheet=1)
for (i in c(2:4,8,14:28,30,36,37,41,44,48,53,57:61)){
data1[,i] <- as.factor(data1[,i])
}
for (i in c(5:7,9:13,29,31:35,38:40,42,43,45:47,49:52,54,56)){
data1[,i] <- as.numeric(as.character(data1[,i]))
}
#KM
library(survival)
library(survminer)
forKM_radscore_rate<-survfit(Surv(survival.time,result)~ risk.group, data =subset(data1,group=="de"))
data1$FVC.rate<-factor(data1$FVC.rate,order=FALSE,levels=c('0','1','2'))
data1$OI.200<-factor(data1$OI.200,order=FALSE,levels=c('0','1'))
data1$result<-as.numeric(as.character(data1$result))
age.group<-ifelse(data1$age>55,'high','low')
risk.group<-ifelse(data1$radscore>1,'high','low')
data1<-cbind(data1,age.group,risk.group)
train<-subset(data1,train==1)
test<-subset(data1,train==0)
external<-subset(data1,train==2)
internal<-subset(data1,train==3)
forKM_radscore_rate<-survfit(Surv(survival.time,result)~ risk.group, data =subset(data1,group=="de"))
ggsurvplot(forKM_radscore_rate, data = subset(data1,group=="de"), risk.table = TRUE,pval=T,pval.method=F,conf.int = T,xlab='Follow Up',legend = "bottom",legend.title = "risk",legend.labs = c("Rad score high risk","Rad score low risk"))
ggsurvplot(forKM_radscore_rate, data = subset(data1,group=="de"), risk.table = TRUE,pval=T,pval.method=F,conf.int = F,xlab='Follow Up',legend = "bottom",legend.title = "risk",legend.labs = c("Rad score high risk","Rad score low risk"))
forKM_radscore_rate<-survfit(Surv(survival.time,result)~ risk.group, data =subset(data1,group=="ex"))
ggsurvplot(forKM_radscore_rate, data = subset(data1,group=="ex"), risk.table = TRUE,pval=T,pval.method=F,conf.int = F,xlab='Follow Up',legend = "bottom",legend.title = "risk",legend.labs = c("Rad score high risk","Rad score low risk"))
forKM_radscore_rate<-survfit(Surv(survival.time,result)~ risk.group, data =subset(data1,group=="in"))
ggsurvplot(forKM_radscore_rate, data = subset(data1,group=="in"), risk.table = TRUE,pval=T,pval.method=F,conf.int = F,xlab='Follow Up',legend = "bottom",legend.title = "risk",legend.labs = c("Rad score high risk","Rad score low risk"))
setwd("D:/renji/ILD")
library(survival)
library(glmnet)
library(openxlsx)
library(glmnet)
library(Hmisc)
library(openxlsx)
data1<-read.xlsx("all_1198.xlsx")#
for (i in c(1,2,5,10,11,13,16)){
data1[,i] <- as.factor(data1[,i])
}
for (i in c(3,4,6:9,15,17:19)){
data1[,i] <- as.numeric(as.character(data1[,i]))
}
age.group<-ifelse(data1$age>55,'high','low')
data1<-cbind(data1,age.group)
train<-subset(data1,train==1)
test<-subset(data1,train==0)
external<-subset(data1,train==2)
internal<-subset(data1,train==3)
#calculate predicted probability at pre-specified time (adm.cens)
survcox_d<-coxph(data=train, Surv(Survival,CustomLabel)~rad_score+age.group+FVC.rate)
summary(survcox_d)
survfit_d=survfit(survcox_d, newdata=d, se.fit=FALSE)
d<-test
survfit_d=survfit(survcox_d, newdata=d, se.fit=FALSE)
survpr24=survfit_d$surv[20,]
estsurv24=survpr24
estinc24=1-survpr24
setwd("D:/renji/ILD")
library(survival)
library(glmnet)
library(openxlsx)
#table1
data1<-read.xlsx("clinicaltable.xlsx",sheet=1)
for (i in c(2:4,8,14:28,30,36,37,41,44,48,53,57:61)){
data1[,i] <- as.factor(data1[,i])
}
for (i in c(5:7,9:13,29,31:35,38:40,42,43,45:47,49:52,54,56)){
data1[,i] <- as.numeric(as.character(data1[,i]))
}
data1$FVC.rate<-factor(data1$FVC.rate,order=FALSE,levels=c('0','1','2'))
data1$OI.200<-factor(data1$OI.200,order=FALSE,levels=c('0','1'))
data1$result<-as.numeric(as.character(data1$result))
age.group<-ifelse(data1$age>55,'high','low')
risk.group<-ifelse(data1$radscore>1,'high','low')
data1<-cbind(data1,age.group,risk.group)
train<-subset(data1,train==1)
test<-subset(data1,train==0)
external<-subset(data1,train==2)
internal<-subset(data1,train==3)
y_train<- Surv(train$survival.time,train$result)
y_test<- Surv(test$survival.time,test$result)
y_internal<- Surv(internal$survival.time,internal$result)
y_external<- Surv(external$survival.time,external$result)
CRmodel<-coxph(y_train~radscore+age.group+FVC.rate+LDH.rate.400,train)
method<- survConcordance(Surv(train$survival.time,train$result) ~ predict(CRmodel, train))
cat(method$concordance, "95%CI:", method$concordance-method$std.err*1.96, method$concordance+method$std.err*1.96)
method<- survConcordance(Surv(test$survival.time,test$result) ~ predict(CRmodel, test))
cat(method$concordance, "95%CI:", method$concordance-method$std.err*1.96, method$concordance+method$std.err*1.96)
method<- survConcordance(Surv(internal$survival.time,internal$result) ~ predict(CRmodel, internal))
cat(method$concordance, "95%CI:", method$concordance-method$std.err*1.96, method$concordance+method$std.err*1.96)
method<- survConcordance(Surv(external$survival.time,external$result) ~ predict(CRmodel, external))
cat(method$concordance, "95%CI:", method$concordance-method$std.err*1.96, method$concordance+method$std.err*1.96)
summary(CCRmodel)
summary(CRmodel)
data1$age.group<-factor(data1$age.group,order=FALSE,levels=c('low','high'))
data1<-cbind(data1,age.group,risk.group)
train<-subset(data1,train==1)
test<-subset(data1,train==0)
external<-subset(data1,train==2)
internal<-subset(data1,train==3)
y_train<- Surv(train$survival.time,train$result)
#build clinical+radiomics model
CRmodel<-coxph(y_train~radscore+age.group+FVC.rate,train)
summary(CRmodel)
#build clinical+radiomics model
CRmodel<-coxph(y_train~radscore+age.group+FVC.rate+LDH.rate.400,train)
summary(CRmodel)
setwd("D:/renji/ILD")
library(ggplot2)
library(openxlsx)
library(ggpubr)
barplot<-read.xlsx("all_1198.xlsx",sheet=3)#
barplot<-read.xlsx("all_1198.xlsx",sheet=3)#
ggbarplot(barplot,x="Feature",y="HR",fill="Feature",rotate=T,ylab="Hazard Ratio",sort.val="asc",sort.by.groups=F)
####. heatmap of feature that <0.05
setwd("D:/renji/ILD")
library(readr)
library("reshape2")
library("pheatmap")
map <-read.xlsx("all_1198.xlsx",sheet=2)
map1 <-subset(map,select =c("CustomLabel","Survival","original_firstorder_RobustMeanAbsoluteDeviation","original_glszm_ZoneEntropy","original_shape_Flatness","original_shape_SphericalDisproportion","wavelet.HLL_glszm_LargeAreaHighGrayLevelEmphasis","wavelet.LLH_glcm_Idmn","wavelet.LLL_firstorder_90Percentile","wavelet.LLL_firstorder_Skewness","wavelet.LLL_glcm_MCC","wavelet.LLL_glszm_ZoneEntropy"))
map1_ordered <- map1[order(map1$CustomLabel),]
annotation_col = data.frame(Event = factor(map1_ordered$CustomLabel))
map2 <- map1_ordered[,2:12]#delete customlabel
map2 = t(map2)
colnames(map2) = paste("patient", 1:230, sep = "")
rownames(annotation_col) = colnames(map2)
colnames(map2) = paste("patient", 1:229, sep = "")
rownames(annotation_col) = colnames(map2)
ann_colors = list( Event = c("0" = "#CCFFFF", "1"="#006699"))
bk=unique(c(seq(-2,2,length=100)))#define range
pheatmap(map2,breaks=bk,scale = "row",color = colorRampPalette(c("#0C8569","#FEFE7A"))(100),cluster_rows = FALSE, cluster_cols = FALSE,annotation_col = annotation_col,main = "Features grouped by events",show_colnames = FALSE,show_rownames = FALSE,annotation_colors = ann_colors,border_color = "NA")
bk=unique(c(seq(-3,3,length=100)))#define range
pheatmap(map2,breaks=bk,scale = "row",color = colorRampPalette(c("#0C8569","#FEFE7A"))(100),cluster_rows = FALSE, cluster_cols = FALSE,annotation_col = annotation_col,main = "Features grouped by events",show_colnames = FALSE,show_rownames = FALSE,annotation_colors = ann_colors,border_color = "NA")
setwd("D:/renji/ILD")
library(survival)
library(glmnet)
library(openxlsx)
#table1
data1<-read.xlsx("clinicaltable.xlsx",sheet=1)
for (i in c(2:4,8,14:28,30,36,37,41,44,48,53,57:61)){
data1[,i] <- as.factor(data1[,i])
}
for (i in c(5:7,9:13,29,31:35,38:40,42,43,45:47,49:52,54,56)){
data1[,i] <- as.numeric(as.character(data1[,i]))
}
data1$FVC.rate<-factor(data1$FVC.rate,order=FALSE,levels=c('0','1','2'))
data1$OI.200<-factor(data1$OI.200,order=FALSE,levels=c('0','1'))
data1$result<-as.numeric(as.character(data1$result))
age.group<-ifelse(data1$age>55,'high','low')
risk.group<-ifelse(data1$radscore>1,'high','low')
data1$age.group<-factor(data1$age.group,order=FALSE,levels=c('low','high'))
data1<-cbind(data1,age.group,risk.group)
train<-subset(data1,train==1)
test<-subset(data1,train==0)
external<-subset(data1,train==2)
internal<-subset(data1,train==3)
setwd("D:/renji/ILD")
library(survival)
library(glmnet)
library(openxlsx)
#table1
data1<-read.xlsx("clinicaltable.xlsx",sheet=1)
for (i in c(2:4,8,14:28,30,36,37,41,44,48,53,57:61)){
data1[,i] <- as.factor(data1[,i])
}
for (i in c(5:7,9:13,29,31:35,38:40,42,43,45:47,49:52,54,56)){
data1[,i] <- as.numeric(as.character(data1[,i]))
}
data1$FVC.rate<-factor(data1$FVC.rate,order=FALSE,levels=c('0','1','2'))
data1$OI.200<-factor(data1$OI.200,order=FALSE,levels=c('0','1'))
data1$result<-as.numeric(as.character(data1$result))
age.group<-ifelse(data1$age>55,'high','low')
risk.group<-ifelse(data1$radscore>1,'high','low')
data1$age.group<-factor(data1$age.group,order=FALSE,levels=c('low','high'))
View(data1)
data1<-cbind(data1,age.group,risk.group)
data1$age.group<-factor(data1$age.group,order=FALSE,levels=c('low','high'))
train<-subset(data1,train==1)
test<-subset(data1,train==0)
external<-subset(data1,train==2)
internal<-subset(data1,train==3)
y_train<- Surv(train$survival.time,train$result)
y_test<- Surv(test$survival.time,test$result)
y_internal<- Surv(internal$survival.time,internal$result)
y_external<- Surv(external$survival.time,external$result)
CRmodel<-coxph(y_train~radscore+FVC.rate,train)
method<- survConcordance(Surv(train$survival.time,train$result) ~ predict(CRmodel, train))
cat(method$concordance, "95%CI:", method$concordance-method$std.err*1.96, method$concordance+method$std.err*1.96)
method<- survConcordance(Surv(test$survival.time,test$result) ~ predict(CRmodel, test))
cat(method$concordance, "95%CI:", method$concordance-method$std.err*1.96, method$concordance+method$std.err*1.96)
method<- survConcordance(Surv(internal$survival.time,internal$result) ~ predict(CRmodel, internal))
cat(method$concordance, "95%CI:", method$concordance-method$std.err*1.96, method$concordance+method$std.err*1.96)
method<- survConcordance(Surv(external$survival.time,external$result) ~ predict(CRmodel, external))
cat(method$concordance, "95%CI:", method$concordance-method$std.err*1.96, method$concordance+method$std.err*1.96)
ggforest(CRmodel,main="hazard ratio of Rad-clinical model",cpositions=c(0.02,0.22,0.4),fontsize=0.8,refLabel="reference",noDigits=2,data=train)
#forest map
library(survminer)
ggforest(CRmodel,main="hazard ratio of Rad-clinical model",cpositions=c(0.02,0.22,0.4),fontsize=0.8,refLabel="reference",noDigits=2,data=train)
CRmodel<- step(CRmodel, direction = "backward")
CRmodel = step(CRmodel, direction = "backward", trace = TRUE,  k = log(nrow(train)))
# Integrated Brier score and prediction error curve
library(pec)
library(riskRegression)
library(rms)
library(Hmisc)
library(survival)
library(survminer)
library(survcomp)
dd=datadist(train)
options(datadist="dd")
Models <- list("CRmodel"= coxph(Surv(survival.time,result)~radscore+FVC.rate, data=train,x=TRUE,y=TRUE),"Rmodel" = coxph(Surv(survival.time,result)~ radscore, data=train,x=TRUE,y=TRUE), "visualmodel" = coxph(Surv(survival.time,result)~HRCTscore, data=train,x=TRUE,y=TRUE))
p <- pec(object = Models,cens.model = "cox", data=train, splitMethod="Boot632plus", B=100,reference = FALSE)
print(p)
setwd("D:/renji/ILD")
library(survival)
library(glmnet)
library(Hmisc)
library(openxlsx)
data1<-read.xlsx("all_1198.xlsx",sheet=4)#
for (i in c(1,2,5,10,11,13,16)){
data1[,i] <- as.factor(data1[,i])
}
for (i in c(3,4,6:9,15,17:19)){
data1[,i] <- as.numeric(as.character(data1[,i]))
}
age.group<-ifelse(data1$age>55,'high','low')
data1<-cbind(data1,age.group)
train<-subset(data1,train==1)
#read the data
d<-train
survcox_d<-coxph(data=train, Surv(Survival,CustomLabel)~rad_score+FVC.rate)
summary(survcox_d)
survfit_d=survfit(survcox_d, newdata=d, se.fit=FALSE)
survpr24=survfit_d$surv[20,]
estsurv24=survpr24
estinc24=1-survpr24
#split into deciles
d$dec24=as.numeric(cut2(estinc24, g=3))
#check that there are 5 or more events in each group
#if not then collapse groups
table(d$dec24, d$CustomLabel)
#calculate the GND test
GND.result1=GND.calib(pred=estinc24, tvar=d$Survival, out=d$CustomLabel,
cens.t=24, groups=d$dec24, adm.cens=24)
source("GND_test.v2.r")
#calculate the GND test
GND.result1=GND.calib(pred=estinc24, tvar=d$Survival, out=d$CustomLabel,
cens.t=24, groups=d$dec24, adm.cens=24)
GND.result1
d<-test
survfit_d=survfit(survcox_d, newdata=d, se.fit=FALSE)
survpr24=survfit_d$surv[20,]
estsurv24=survpr24
estinc24=1-survpr24
#split into deciles
d$dec24=as.numeric(cut2(estinc24, g=3))
#check that there are 5 or more events in each group
#if not then collapse groups
table(d$dec24, d$CustomLabel)
source("GND_test.v2.r")
#calculate the GND test
GND.result1=GND.calib(pred=estinc24, tvar=d$Survival, out=d$CustomLabel,
cens.t=24, groups=d$dec24, adm.cens=24)
GND.result1
d<-test
test<-subset(data1,train==0)
external<-subset(data1,train==2)
internal<-subset(data1,train==3)
d<-test
survfit_d=survfit(survcox_d, newdata=d, se.fit=FALSE)
survpr24=survfit_d$surv[20,]
estsurv24=survpr24
estinc24=1-survpr24
#split into deciles
d$dec24=as.numeric(cut2(estinc24, g=3))
#check that there are 5 or more events in each group
#if not then collapse groups
table(d$dec24, d$CustomLabel)
source("GND_test.v2.r")
#calculate the GND test
GND.result1=GND.calib(pred=estinc24, tvar=d$Survival, out=d$CustomLabel,
cens.t=24, groups=d$dec24, adm.cens=24)
GND.result1
d<-external
#calculate predicted probability at pre-specified time (adm.cens)
survcox_d<-coxph(data=train, Surv(Survival,CustomLabel)~rad_score+age.group+FVC.rate+LDH_rate)
summary(survcox_d)
survfit_d=survfit(survcox_d, newdata=d, se.fit=FALSE)
survpr24=survfit_d$surv[20,]
estsurv24=survpr24
estinc24=1-survpr24
#split into deciles
d$dec24=as.numeric(cut2(estinc24, g=3))
#check that there are 5 or more events in each group
#if not then collapse groups
table(d$dec24, d$CustomLabel)
source("GND_test.v2.r")
#calculate the GND test
GND.result1=GND.calib(pred=estinc24, tvar=d$Survival, out=d$CustomLabel,
cens.t=24, groups=d$dec24, adm.cens=24)
GND.result1
d<-internal
#calculate predicted probability at pre-specified time (adm.cens)
survcox_d<-coxph(data=train, Surv(Survival,CustomLabel)~rad_score+age.group+FVC.rate+LDH_rate)
summary(survcox_d)
survfit_d=survfit(survcox_d, newdata=d, se.fit=FALSE)
survpr24=survfit_d$surv[20,]
estsurv24=survpr24
estinc24=1-survpr24
#split into deciles
d$dec24=as.numeric(cut2(estinc24, g=3))
#check that there are 5 or more events in each group
#if not then collapse groups
table(d$dec24, d$CustomLabel)
#calculate the GND test
GND.result1=GND.calib(pred=estinc24, tvar=d$Survival, out=d$CustomLabel,
cens.t=24, groups=d$dec24, adm.cens=24)
GND.result1
cf=calPlot(CRmodel,times=24,data=test)
CRmodel<-cph(y_train~rad_score+OI.200+FVC.50,x=T,y=T,data=train,surv=T,time.inc=24)#define predicion time point
data1<-read.xlsx("all_1198.xlsx")
for (i in c(1,2,5,10,11,13,16)){
data1[,i] <- as.factor(data1[,i])
}
for (i in c(3,4,6:9,15,17:19)){
data1[,i] <- as.numeric(as.character(data1[,i]))
}
train<-subset(data1,train==1)
library(rms)
y_train<- Surv(train$Survival,train$CustomLabel)
CRmodel<-cph(y_train~rad_score+OI.200+FVC.50,x=T,y=T,data=train,surv=T,time.inc=24)#define predicion time point
Rmodel<-cph(y_train~rad_score,x=T,y=T,data=train,surv=T,time.inc=24)
Vmodel<-cph(y_train~HRCT_score,x=T,y=T,data=train,surv=T,time.inc=24)#define predicion time point
setwd("D:/renji/ILD")
library(survival)
library(glmnet)
library(openxlsx)
data1<-read.xlsx("all_1198.xlsx")
for (i in c(1,2,5,10,11,13,16)){
data1[,i] <- as.factor(data1[,i])
}
for (i in c(3,4,6:9,15,17:19)){
data1[,i] <- as.numeric(as.character(data1[,i]))
}
train<-subset(data1,train==1)
library(rms)
y_train<- Surv(train$Survival,train$CustomLabel)
CRmodel<-cph(y_train~rad_score+OI.200+FVC.50,x=T,y=T,data=train,surv=T,time.inc=24)#define predicion time point
View(train)
CRmodel<-cph(y_train~rad_score+OI.200+FVC.rate,x=T,y=T,data=train,surv=T,time.inc=24)#define predicion time point
f <- coxph(Surv(Survival,CustomLabel)~rad_score+OI.200+FVC.rate,data=train,x=TRUE,y=TRUE)
summary(f)
Rmodel<-cph(Surv(Survival,CustomLabel)~rad_score,x=T,y=T,data=train,surv=T,time.inc=24)
Vmodel<-cph(Surv(Survival,CustomLabel)~HRCT_score,x=T,y=T,data=train,surv=T,time.inc=24)#define predicion time point
install.packages("prodlim")
install.packages("prodlim")
#nomogram
library(rms)
dd<-datadist(train)
options(datadist="dd")
CRmodel<-cph(Surv(Survival,CustomLabel)~rad_score+OI.200+FVC.rate,x=T,y=T,data=train,surv=T,time.inc=24)#define predicion time point
Rmodel<-cph(Surv(Survival,CustomLabel)~rad_score,x=T,y=T,data=train,surv=T,time.inc=24)
Vmodel<-cph(Surv(Survival,CustomLabel)~HRCT_score,x=T,y=T,data=train,surv=T,time.inc=24)#define predicion time point
cf=calPlot(f,times=24,data=test)
library(riskRegression)
cf=calPlot(f,times=24,data=test)
library(lava)
cf=calPlot(f,times=24,data=test)
library(prodlim)
cf=calPlot(f,times=24,data=test)
library(rms)
library(prodlim)
library(lava)
library(riskRegression)
CRmodel<-cph(Surv(Survival,CustomLabel)~rad_score+OI.200+FVC.rate,x=T,y=T,data=train,surv=T,time.inc=24)#define predicion time point
Rmodel<-cph(Surv(Survival,CustomLabel)~rad_score,x=T,y=T,data=train,surv=T,time.inc=24)
Vmodel<-cph(Surv(Survival,CustomLabel)~HRCT_score,x=T,y=T,data=train,surv=T,time.inc=24)#define predicion time point
cf=calPlot(CRmodel,time=24,data=test)
library(pec)
cf=calPlot(CRmodel,time=24,data=test)
test<-subset(data1,train==0)
external<-subset(data1,train==2)
internal<-subset(data1,train==3)
cf=calPlot(CRmodel,time=24,data=test)
#test
cf=calPlot(list("Cox regression X1+X2"=CRmodel,"Cox regression X2"=Rmodel,"Cox regression X3"=Vmodel),
time=24,type="risk",data=test)
#test
cf=calPlot(list("CRmodel"=CRmodel,"Rmodel X2"=Rmodel,"Vmodel"=Vmodel),
time=24,type="risk",data=test)
#test
cf=calPlot(list("CRmodel"=CRmodel,"Rmodel"=Rmodel,"Vmodel"=Vmodel),
time=24,type="risk",data=test)
print(cf)
plot(cf)
cf=calPlot(list("CRmodel"=CRmodel,"Rmodel"=Rmodel,"Vmodel"=Vmodel),
time=24,type="risk",data=internal)
cf2=calPlot(list("CRmodel"=CRmodel,"Rmodel"=Rmodel,"Vmodel"=Vmodel),
time=24,type="risk",data=external)
print(cf2)
setwd("D:/MDA5_R/ILD")
library(DynNom)
install.packages("DynNom", repos="http://cran.rstudio.com/", dependencies=TRUE)
library(DynNom)
setwd("D:/renji/ILD")
library(compareGroups)
library(openxlsx)
data<-read.xlsx("LDH.xlsx")
restab<-descrTable(train ~ ., data = data1,method=NA,show.all=TRUE)
restab<-descrTable(train ~ ., data = data,method=NA,show.all=TRUE)
export2csv(restab, file='tables1.csv')
library(DynNom)
remove.packages("DynNom", lib="~/R/win-library/3.6")
library(DynNom)
install.packages("DynNom")
library(DynNom)
library(DynNom)
data<-read.xlsx("LDH.xlsx")
estab<-descrTable(train ~ ., data = data,method=NA,show.all=TRUE)
export2csv(estab, file='tables1.csv')
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
library(DynNom)
unloadNamespace("htmltools")
library(htmltools)
library(DynNom)
